[versions]
androidx-activity = "1.6.0"
androidx-appcompat = "1.5.1"
androidx-benchmark-macro = "1.1.0"
androidx-compose-compiler = "1.3.2"
androidx-compose-base = "1.2.1"
androidx-compose-material = "1.3.1"
androidx-constraintlayout = "2.1.4"
androidx-core = "1.9.0"
androidx-datastore = "1.0.0"
androidx-fragment = "1.5.3"
androidx-hilt = "2.44"
androidx-lifecycle = "2.5.1"
androidx-navigation = "2.5.2"
androidx-profileinstaller = "1.2.0"
androidx-recyclerview = "1.2.1"
androidx-room = "2.4.3"
androidx-test-espresso = "3.4.0"
androidx-test-junit = "1.1.3"
androidx-test-orchestrator = "1.4.1"
androidx-test-runner = "1.4.0"
androidx-work = "2.7.1"
desugar = "1.2.2"
google-flexbox = "3.0.0"
google-material = "1.6.1"
junit4 = "4.13.2"
kotlinx-coroutines = "1.6.1"
mockk = "1.12.5"
mpandroidchart = "v3.1.0"
timber = "5.0.1"
uiautomator = "2.2.0"

# Plugin versions
android-gradle-plugin = "7.3.1"
kotlin = "1.7.20"
ksp = "1.7.20-1.0.7"


[libraries]

# Production
androidx-activity = { module = "androidx.activity:activity-ktx", version.ref = "androidx.activity" } # Activity
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx.appcompat" } # Backwards compatibility APIs
androidx-benchmark-macro = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidx.benchmark.macro" } # Macrobenchmark
androidx-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx.activity" } # Compose Activity Integration
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx.compose.material" } # Compose Material Design
androidx-compose-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidx.compose.material" } # Extended Material Icons
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "androidx.compose.base" } # Compose Animations
androidx-compose-ui = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx.compose.base" } # Compose Live Preview
androidx-compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx.lifecycle" } # Compose ViewModel Integration
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx.constraintlayout" } # Constraint Layout
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx.core" } # Jetpack Core Library
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx.datastore" } # Preferences DataStore
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx.fragment" } # Fragment
androidx-hilt-core = { module = "com.google.dagger:hilt-android", version.ref = "androidx.hilt" } # Hilt
androidx-hilt-kapt = { module = "com.google.dagger:hilt-compiler", version.ref = "androidx.hilt" } # Hilt Compiler for Kapt annnotations
androidx-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx.lifecycle" } # LiveData
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx.navigation" } # Navigation Core
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx.navigation" } # Navigation Fragment Integration
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "androidx.profileinstaller" } # Install baseline profiles
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx.recyclerview" } # RecyclerView
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx.room" } # Room runtime
androidx-room-ksp = { module = "androidx.room:room-compiler", version.ref = "androidx.room" } # Room ksp compiler
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx.room" } # Room kotln extensions and coroutines support
androidx-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx.lifecycle" } # ViewModel
androidx-work = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx.work" } # WorkManager
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" } # Java 8 desugaring support (https://developer.android.com/studio/write/java8-support)
google-flexbox = { module = "com.google.android.flexbox:flexbox", version.ref = "google.flexbox" } # Flexbox layout, used for double staggered layout in Tag Manager
google-material = { module = "com.google.android.material:material", version.ref = "google.material" } # Material Components (Views)
mpandroidchart = { module = "com.github.PhilJay:MPAndroidChart", version.ref = "mpandroidchart" } # Charts (https://github.com/PhilJay/MPAndroidChart)
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" } # Timber - Logging (https://github.com/JakeWharton/timber)

# Testing
androidx-test-compose-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx.compose.base" } # Compose tests
androidx-test-compose-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx.compose.base" } # Needed for createComposeRule
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx.test.espresso" } # Espresso
androidx-test-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidx.test.espresso" } # RecyclerView Actions
androidx-test-fragment = { module = "androidx.fragment:fragment-testing", version.ref = "androidx.fragment" } # Fragment scenario
androidx-test-hilt-core = { module = "com.google.dagger:hilt-android-testing", version.ref = "androidx.hilt" } # Hilt tests
androidx-test-hilt-kapt = { module = "com.google.dagger:hilt-android-compiler", version.ref = "androidx.hilt" } # Hilt test annotations
androidx-test-junit-base = { module = "androidx.test.ext:junit", version.ref = "androidx.test.junit" } # Instrumentation assertions
androidx-test-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx.test.junit" } # Kotlin extensions for JUnit
androidx-test-orchestrator = { module="androidx.test:orchestrator", version.ref = "androidx.test.orchestrator" } # Test orchestrator, needed for most tests
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx.test.runner" } # AndroidTest runner
androidx-test-navigation = { module = "androidx.navigation:navigation-testing", version.ref = "androidx.navigation" } # Navigation tests
androidx-test-work = { module = "androidx.work:work-testing", version.ref = "androidx.work" } # WorkManager tests
junit4 = { module = "junit:junit", version.ref = "junit4" } # JUnit 4 framework
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx.coroutines" } # Coroutines testing
mockk = { module = "io.mockk:mockk", version.ref = "mockk" } # Mocking library for Kotlin
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" } # Bechmark testing UI toolkit

# Dependencies of the included build-logic
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "android.gradle.plugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-plugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }


[bundles]
androidx-compose = [
    "androidx.compose.activity",
    "androidx.compose.material",
    "androidx.compose.icons",
    "androidx.compose.animation",
    "androidx.compose.ui",
    "androidx.compose.viewmodel"
]
androidx-navigation = [
    "androidx.navigation.ui",
    "androidx.navigation.fragment"
]
androidx-room = [
    "androidx.room.runtime",
    "androidx.room.ktx"
]



[plugins]
android-application = { id = "com.android.application", version.ref = "android.gradle.plugin" } # Base for application modules
android-library = { id = "com.android.library", version.ref = "android.gradle.plugin" } # Base for Android library modules
hilt = { id = "com.google.dagger.hilt.android", version.ref = "androidx.hilt" } # Hilt plugin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" } # Kotlin for Android
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" } # Pure Kotlin modules
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" } # Kotlin Symbol Processing

